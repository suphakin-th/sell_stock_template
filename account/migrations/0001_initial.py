# Generated by Django 4.2.7 on 2024-08-06 09:44

from django.conf import settings
import django.contrib.auth.validators
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ("auth", "0012_alter_user_first_name_max_length"),
    ]

    operations = [
        migrations.CreateModel(
            name="Account",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("password", models.CharField(max_length=128, verbose_name="password")),
                (
                    "last_login",
                    models.DateTimeField(
                        blank=True, null=True, verbose_name="last login"
                    ),
                ),
                (
                    "is_superuser",
                    models.BooleanField(
                        default=False,
                        help_text="Designates that this user has all permissions without explicitly assigning them.",
                        verbose_name="superuser status",
                    ),
                ),
                (
                    "external_id",
                    models.CharField(
                        blank=True, default=None, max_length=32, null=True
                    ),
                ),
                (
                    "code",
                    models.CharField(
                        blank=True,
                        db_index=True,
                        default=None,
                        max_length=32,
                        null=True,
                    ),
                ),
                (
                    "username",
                    models.CharField(
                        error_messages={
                            "unique": "A user with that username already exists."
                        },
                        help_text="Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.",
                        max_length=150,
                        unique=True,
                        validators=[
                            django.contrib.auth.validators.UnicodeUsernameValidator()
                        ],
                        verbose_name="username",
                    ),
                ),
                (
                    "email",
                    models.EmailField(
                        blank=True,
                        db_index=True,
                        max_length=255,
                        null=True,
                        verbose_name="Email address",
                    ),
                ),
                ("title", models.CharField(blank=True, max_length=64)),
                (
                    "first_name",
                    models.CharField(blank=True, db_index=True, max_length=120),
                ),
                (
                    "middle_name",
                    models.CharField(blank=True, db_index=True, max_length=120),
                ),
                (
                    "last_name",
                    models.CharField(blank=True, db_index=True, max_length=120),
                ),
                ("id_card", models.CharField(blank=True, max_length=255, null=True)),
                (
                    "image",
                    models.ImageField(
                        blank=True, null=True, upload_to="account/%Y/%m/"
                    ),
                ),
                (
                    "image_log",
                    models.ImageField(
                        blank=True, null=True, upload_to="account/%Y/%m/"
                    ),
                ),
                (
                    "gender",
                    models.IntegerField(
                        choices=[
                            (0, "Not set"),
                            (1, "Male"),
                            (2, "Female"),
                            (3, "Other"),
                        ],
                        default=0,
                    ),
                ),
                (
                    "type",
                    models.IntegerField(
                        choices=[(0, "user"), (1, "system_user")], default=0
                    ),
                ),
                ("language", models.CharField(blank=True, default="en", max_length=12)),
                ("is_admin", models.BooleanField(default=False)),
                ("uuid", models.CharField(blank=True, db_index=True, max_length=120)),
                (
                    "token",
                    models.CharField(
                        blank=True, db_index=True, max_length=32, null=True
                    ),
                ),
                ("desc", models.TextField(blank=True)),
                (
                    "phone",
                    models.CharField(
                        blank=True, db_index=True, max_length=64, null=True
                    ),
                ),
                ("address", models.TextField(blank=True)),
                (
                    "last_active",
                    models.DateTimeField(
                        blank=True, null=True, verbose_name="last active"
                    ),
                ),
                ("is_active", models.BooleanField(db_index=True, default=True)),
                ("is_verified_email", models.BooleanField(default=False)),
                ("date_birth", models.DateField(blank=True, null=True)),
                (
                    "start_at",
                    models.DateField(
                        blank=True, default=django.utils.timezone.now, null=True
                    ),
                ),
                ("end_at", models.DateField(blank=True, null=True)),
                ("is_force_reset_password", models.BooleanField(default=False)),
                ("datetime_update", models.DateTimeField(auto_now=True, null=True)),
                ("working_location", models.CharField(blank=True, max_length=255)),
                (
                    "working_schedule_shift",
                    models.CharField(blank=True, max_length=255),
                ),
                ("english_score", models.CharField(blank=True, max_length=12)),
                (
                    "learning_path_view",
                    models.IntegerField(
                        choices=[(0, "path_view"), (1, "card_view")], default=0
                    ),
                ),
                (
                    "groups",
                    models.ManyToManyField(
                        blank=True,
                        help_text="The groups this user belongs to. A user will get all permissions granted to each of their groups.",
                        related_name="user_set",
                        related_query_name="user",
                        to="auth.group",
                        verbose_name="groups",
                    ),
                ),
                (
                    "user_permissions",
                    models.ManyToManyField(
                        blank=True,
                        help_text="Specific permissions for this user.",
                        related_name="user_set",
                        related_query_name="user",
                        to="auth.permission",
                        verbose_name="user permissions",
                    ),
                ),
            ],
            options={
                "ordering": ["-is_active", "-id"],
                "default_permissions": ("add", "change", "delete", "view"),
            },
        ),
        migrations.CreateModel(
            name="Ability",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("code", models.CharField(max_length=150, unique=True)),
            ],
        ),
        migrations.CreateModel(
            name="Avatar",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "image",
                    models.ImageField(
                        blank=True, null=True, upload_to="account/avatar/%Y/%m/"
                    ),
                ),
                ("sort", models.IntegerField(db_index=True, default=0)),
                (
                    "datetime_create",
                    models.DateTimeField(auto_now_add=True, db_index=True),
                ),
            ],
            options={
                "ordering": ["sort", "id"],
                "default_permissions": (),
            },
        ),
        migrations.CreateModel(
            name="UserAbility",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "ability",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="account.ability",
                    ),
                ),
                (
                    "account",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="Token",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("token", models.CharField(blank=True, max_length=100, unique=True)),
                ("datetime_create", models.DateField(auto_now_add=True, db_index=True)),
                (
                    "account",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="+",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={
                "ordering": ["-datetime_create"],
                "default_permissions": (),
            },
        ),
        migrations.CreateModel(
            name="SSOToken",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "sso_token",
                    models.CharField(blank=True, max_length=100, unique=True),
                ),
                ("datetime_create", models.DateField(auto_now_add=True, db_index=True)),
                ("is_active", models.BooleanField()),
                (
                    "account",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="+",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={
                "ordering": ["-datetime_create"],
                "default_permissions": (),
            },
        ),
        migrations.CreateModel(
            name="Session",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("session_key", models.CharField(db_index=True, max_length=255)),
                ("token", models.TextField(blank=True, null=True)),
                (
                    "datetime_create",
                    models.DateTimeField(auto_now_add=True, db_index=True),
                ),
                (
                    "account",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="+",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="QrCode",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "status",
                    models.IntegerField(
                        choices=[(-1, "Deactivate"), (1, "Activate")],
                        db_index=True,
                        default=1,
                    ),
                ),
                (
                    "datetime_create",
                    models.DateTimeField(auto_now_add=True, db_index=True),
                ),
                (
                    "account",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={
                "ordering": ["-datetime_create"],
                "default_permissions": (),
            },
        ),
        migrations.CreateModel(
            name="PasswordHistory",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("password", models.CharField(max_length=128, verbose_name="password")),
                (
                    "datetime_create",
                    models.DateTimeField(auto_now_add=True, db_index=True),
                ),
                (
                    "account",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={
                "default_permissions": (),
            },
        ),
        migrations.CreateModel(
            name="OneTimePassword",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("otp_code", models.CharField(blank=True, max_length=10)),
                (
                    "status",
                    models.IntegerField(
                        choices=[(-1, "Deactivate"), (1, "Activate")],
                        db_index=True,
                        default=1,
                    ),
                ),
                (
                    "datetime_create",
                    models.DateTimeField(auto_now_add=True, db_index=True),
                ),
                ("datetime_expire", models.DateTimeField(blank=True, null=True)),
                (
                    "account",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={
                "ordering": ["-datetime_create"],
                "default_permissions": (),
            },
        ),
        migrations.CreateModel(
            name="Forgot",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("token", models.CharField(db_index=True, max_length=120)),
                (
                    "status",
                    models.IntegerField(
                        choices=[
                            (-1, "Deactivate"),
                            (1, "Activate"),
                            (2, "Completed"),
                            (3, "Expired"),
                        ],
                        db_index=True,
                        default=1,
                    ),
                ),
                (
                    "method",
                    models.IntegerField(
                        choices=[
                            (0, "(Not set)"),
                            (1, "Forgot password"),
                            (2, "Force reset password"),
                            (3, "Change password"),
                            (4, "Forgot password OTP"),
                        ],
                        db_index=True,
                        default=0,
                    ),
                ),
                (
                    "datetime_create",
                    models.DateTimeField(auto_now_add=True, db_index=True),
                ),
                (
                    "send_method",
                    models.IntegerField(
                        choices=[(1, "Email"), (2, "SMS")], db_index=True, default=1
                    ),
                ),
                ("count_failed", models.IntegerField(default=0)),
                ("datetime_failed_limit", models.DateTimeField(blank=True, null=True)),
                (
                    "account",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={
                "default_permissions": (),
            },
        ),
    ]
